{"version":3,"sources":["skip.js","service.js","main.js"],"names":["simulateClick","element","eventOptions","window","MouseEvent","bubbles","cancelable","view","dispatchEvent","initialize","console","log","activateStickyScrollPadding","getContactEmail","getNetworkStatus","document","navItem","querySelector","navItemHeight","offsetHeight","documentElement","style","setProperty","concat","navigator","serviceWorker","register","then","addEventListener","event","target","key","classList","contains","history","pushState","title","location","pathname","menu","getOverlay","overlayItem","getAttribute","setAttribute","previousElementSibling","textContent","contactItems","querySelectorAll","Array","from","forEach","contact","getContactEvent","id","emailData","replace","removeAttribute","status","online","offline","updateNetworkStatus","onLine","setTimeout","uniqueData","value","index","self","indexOf","setTextAreaPlaceHolderText","textArea","getTextAreaTextValue","generateButton","getPlaylist","map","link","linkSplit","includes","split","hyperlink","viewPlaylist","playList","remove","createElement","text","className","href","idsArray","after"],"mappings":"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","file":"main.min.js","sourcesContent":["// Simulate Click\r\ndocument.addEventListener(\"keydown\", (event) => {\r\n  const element = event.target;\r\n  //   console.log(element)\r\n  if (event.key === \"Enter\") {\r\n    if (element.classList.contains(\"skip\")) {\r\n      simulateClick(element);\r\n\r\n      if (history.pushState) {\r\n        history.pushState(\"\", document.title, window.location.pathname);\r\n      } else {\r\n        location = \"/\";\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nfunction simulateClick(element) {\r\n  // Create our event (with options)\r\n  const eventOptions = new window.MouseEvent(\"click\", {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    view: window,\r\n  });\r\n  // If cancelled, don't dispatch our event\r\n  const cancelled = !element.dispatchEvent(eventOptions);\r\n\r\n  if (cancelled) {\r\n    // A handler called preventDefault.\r\n    // console.log('cancelled')\r\n  } else {\r\n    // None of the handlers called preventDefault.\r\n    // console.log('not cancelled')\r\n  }\r\n}","// Check the browser to make sure it supports service workers\r\nif('serviceWorker' in navigator) {\r\n    navigator.serviceWorker\r\n    // Register the path to the service worker file\r\n    .register('./serviceWorker.js')\r\n    .then(function() {\r\n        console.log('Service Worker is Registered');\r\n    })\r\n}","// Initialize\r\nwindow.addEventListener(\"load\", initialize);\r\n\r\nfunction initialize() {\r\n  console.log(\"Welcome! ðŸ‘‹\");\r\n  activateStickyScrollPadding();\r\n  getContactEmail();\r\n  getNetworkStatus();\r\n}\r\n\r\n// Scrolling\r\nfunction activateStickyScrollPadding() {\r\n  const navItem = document.querySelector(\".navbar\");\r\n  if (navItem) {\r\n    const navItemHeight = navItem.offsetHeight;\r\n\r\n    document.documentElement.style.setProperty(\r\n      \"--scroll-padding\",\r\n      `${navItemHeight}px`\r\n    );\r\n  }\r\n}\r\n\r\nlet menu = document.querySelector(\"button#menu\");\r\nif (menu) {\r\n  menu.addEventListener(\"click\", getOverlay);\r\n}\r\n\r\nfunction getOverlay() {\r\n  let overlayItem = document.querySelector(\"#info[data-open]\");\r\n\r\n  if (overlayItem.getAttribute(\"data-open\") == \"false\") {\r\n    overlayItem.setAttribute(\"data-open\", \"true\");\r\n    overlayItem.previousElementSibling.setAttribute(\"data-open\", \"false\");\r\n    menu.textContent = \"Close Info\";\r\n  } else {\r\n    overlayItem.setAttribute(\"data-open\", \"false\");\r\n    overlayItem.previousElementSibling.setAttribute(\"data-open\", \"true\");\r\n    menu.textContent = \"Info\";\r\n  }\r\n}\r\n\r\n// Email\r\nfunction getContactEmail() {\r\n  let contactItems = document.querySelectorAll(\"[data-email]\");\r\n  let contactArray = Array.from(contactItems);\r\n\r\n  contactArray.forEach((contact) => {\r\n    document.addEventListener(\"click\", (event) => {\r\n      getContactEvent(event);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        getContactEvent(event);\r\n      }\r\n    });\r\n\r\n    function getContactEvent(event) {\r\n      if (contact.id == event.target.id) {\r\n        let emailData = \"helloATfebreroDOTinfo\";\r\n        emailData = emailData.replace(/AT/, \"@\").replace(/DOT/, \".\");\r\n        contact.setAttribute(\"data-email\", \"true\");\r\n        contact.setAttribute(\"href\", `mailto:${emailData}`);\r\n      } else {\r\n        contact.setAttribute(\"data-email\", \"false\");\r\n        contact.removeAttribute(\"data-value\");\r\n        contact.removeAttribute(\"href\");\r\n        contact.removeAttribute(\"rel\");\r\n        contact.removeAttribute(\"target\");\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// Network\r\nfunction getNetworkStatus() {\r\n  const status = document.querySelector(\"#status\");\r\n  const online = document.querySelector(\"#online\");\r\n  const offline = document.querySelector(\"#offline\");\r\n\r\n  function updateNetworkStatus() {\r\n    let condition = navigator.onLine ? \"online\" : \"offline\";\r\n\r\n    if (condition === \"offline\") {\r\n      status.setAttribute(\"data-open\", \"true\");\r\n      offline.setAttribute(\"data-open\", \"true\");\r\n      online.setAttribute(\"data-open\", \"false\");\r\n    } else {\r\n      status.setAttribute(\"data-open\", \"true\");\r\n      online.setAttribute(\"data-open\", \"true\");\r\n      offline.setAttribute(\"data-open\", \"false\");\r\n\r\n      setTimeout(() => {\r\n        online.setAttribute(\"data-open\", \"false\");\r\n        status.setAttribute(\"data-open\", \"false\");\r\n      }, 5800);\r\n    }\r\n  }\r\n\r\n  window.addEventListener(\"online\", updateNetworkStatus);\r\n  window.addEventListener(\"offline\", updateNetworkStatus);\r\n}\r\n\r\n// Sort Unique Data\r\nfunction uniqueData(value, index, self) {\r\n  return self.indexOf(value) === index;\r\n}\r\n\r\n// List\r\nfunction setTextAreaPlaceHolderText() {\r\n  const textArea = document.querySelector(\"#links\");\r\n\r\n  if (textArea) {\r\n    textArea.setAttribute(\r\n      \"placeholder\",\r\n      `Paste links here, each separated by a new line. \r\nAny link or ID works! \r\nFor example: \r\nhttps://www.youtube.com/watch?v=YClS7pfdaoQ\r\nhttps://www.youtube.com/watch?v=JOyeCgzJUPk \r\nhttps://www.youtube.com/watch?v=guigxQ8SNS8&amp;t=4s \r\nhttps://youtu.be/D7CK5o4s_BE \r\nhttps://youtu.be/B9vkM8SeScY?t=41 \r\nW_OGQoRDpE4\r\nffh0ojPU27k`\r\n    );\r\n  }\r\n}\r\nsetTextAreaPlaceHolderText();\r\n\r\nfunction getTextAreaTextValue() {\r\n  const textArea = document.querySelector(\"#links\");\r\n\r\n  if (textArea) {\r\n    const generateButton = document.querySelector(\"#generate\");\r\n\r\n    if (generateButton) {\r\n      generateButton.addEventListener(\"click\", () => {\r\n        if (textArea.value !== \"\") {\r\n          let linksValue = textArea.value;\r\n\r\n          let linksArray = [];\r\n          linksArray = linksValue.split(\"\\n\");\r\n\r\n          let idsArray = linksArray.map((link) => {\r\n            let linkSplit;\r\n            let linkId;\r\n\r\n            if (link.includes(\"?v=\")) {\r\n              let linkSplit = link.split(\"?v=\")[1];\r\n\r\n              if (linkSplit.includes(\"&\")) {\r\n                linkId = linkSplit.split(\"&\")[0];\r\n              } else {\r\n                linkId = linkSplit;\r\n              }\r\n\r\n              return linkId.replace(/\\s/g, \"\");\r\n            } else if (link.includes(\".be/\")) {\r\n              let linkSplit = link.split(\".be/\")[1];\r\n\r\n              if (linkSplit.includes(\"?\")) {\r\n                linkId = linkSplit.split(\"?\")[0];\r\n              } else {\r\n                linkId = linkSplit;\r\n              }\r\n\r\n              return linkId.replace(/\\s/g, \"\");\r\n            } else {\r\n              linkId = link;\r\n\r\n              return linkId.replace(/\\s/g, \"\");\r\n            }\r\n          });\r\n\r\n          getPlaylist(idsArray);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\ngetTextAreaTextValue();\r\n\r\nfunction getPlaylist(idsArray) {\r\n  const viewPlaylist = document.querySelector(\"#generate\");\r\n\r\n  if (viewPlaylist) {\r\n    const playList = document.querySelector(\"#playlist\");\r\n\r\n    if (playList) {\r\n      playList.remove();\r\n    }\r\n\r\n    let hyperlink = document.createElement(\"a\");\r\n\r\n    hyperlink.setAttribute(\"id\", \"playlist\");\r\n    hyperlink.setAttribute(\"rel\", \"noopener noreferer\");\r\n    hyperlink.text = \"Click to view your YouTube Playlist\";\r\n    hyperlink.className = \"form__download\";\r\n    hyperlink.target = \"_blank\";\r\n    hyperlink.href = `https://www.youtube.com/watch_videos?video_ids=${idsArray}`;\r\n\r\n    viewPlaylist.after(hyperlink);\r\n  }\r\n}\r\n"]}